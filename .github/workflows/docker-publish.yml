name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      
  push:
    branches: [ "master" ]  

jobs:
  deploy:
    name: Deploy Docker container
    runs-on: ubuntu-latest
    env:
      projectName: ghh5739/test-ngnix
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
     # - name: Log in to Docker Hub
     #   uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
     #   with:
     #     username: ${{ secrets.DOCKERHUB_USERNAME }}
     #     password: ${{ secrets.DOCKERHUB_TOKEN }}
       
     # - name: Build and push Docker image
     #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
     #   with:
     #     context: .
     #     push: true
     #     tags: ${{ env.projectName }}
     
      - name: Send publish message
        uses: appleboy/telegram-action@master
        with:
           to: ${{ secrets.TELEGRAM_TO }}
           token: ${{ secrets.TELEGRAM_TOKEN }}
           message: The project ${{ env.projectName }} was published to Dockerhub
                    
      - name: Install SSH Key
        uses: kielabokkie/ssh-key-and-known-hosts-action@v1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-host: ${{ secrets.SSH_HOST }}
          
     # - name: Stop old container
     #   run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} docker ps -q --filter ancestor=${{ env.projectName }} | xargs docker stop
     
      - name: Stop old container
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} docker stop 599d14cff5f2
       
      - name: Pull new image
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} docker pull ${{ env.projectName }}
      
      - name: Run new container
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} docker run --rm -d -p 80:80 ${{ env.projectName }}
        
      - name: Send deploy message
        uses: appleboy/telegram-action@master
        with:
           to: ${{ secrets.TELEGRAM_TO }}
           token: ${{ secrets.TELEGRAM_TOKEN }}
           message: The project ${{ env.projectName }} was deployed to host
          
   
          

        
          
     
      
    
